// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace glinoMISIS_back.Migrations
{
    [DbContext(typeof(GlinoMISISDBContext))]
    [Migration("20241016151203_4")]
    partial class _4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Models.Compartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Compartments");
                });

            modelBuilder.Entity("Core.Models.Employee", b =>
                {
                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Certificates")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrentConpartmentID")
                        .HasColumnType("int");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Login");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Core.Models.HardSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeLogin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeLogin");

                    b.ToTable("HardSkill");
                });

            modelBuilder.Entity("Core.Models.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeeLogin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Information")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeLogin");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("Core.Models.PlaceOfWork", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeLogin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("JoinDate")
                        .HasColumnType("bigint");

                    b.Property<long>("LeaveDate")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeLogin");

                    b.ToTable("PlaceOfWork");
                });

            modelBuilder.Entity("Core.Models.SoftSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeLogin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeLogin");

                    b.ToTable("SoftSkill");
                });

            modelBuilder.Entity("Core.Models.HardSkill", b =>
                {
                    b.HasOne("Core.Models.Employee", null)
                        .WithMany("HardSkillSet")
                        .HasForeignKey("EmployeeLogin");
                });

            modelBuilder.Entity("Core.Models.Notification", b =>
                {
                    b.HasOne("Core.Models.Employee", null)
                        .WithMany("Notifications")
                        .HasForeignKey("EmployeeLogin");
                });

            modelBuilder.Entity("Core.Models.PlaceOfWork", b =>
                {
                    b.HasOne("Core.Models.Employee", null)
                        .WithMany("PreviousPositions")
                        .HasForeignKey("EmployeeLogin");
                });

            modelBuilder.Entity("Core.Models.SoftSkill", b =>
                {
                    b.HasOne("Core.Models.Employee", null)
                        .WithMany("SoftSkillSet")
                        .HasForeignKey("EmployeeLogin");
                });

            modelBuilder.Entity("Core.Models.Employee", b =>
                {
                    b.Navigation("HardSkillSet");

                    b.Navigation("Notifications");

                    b.Navigation("PreviousPositions");

                    b.Navigation("SoftSkillSet");
                });
#pragma warning restore 612, 618
        }
    }
}
